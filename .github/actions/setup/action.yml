name: Setup

description: "Setup PHP and Composer"

inputs:
    php-version:
        description: "The PHP version(s) you wish to use"
        required: true
    php-extensions:
        description: "The PHP extensions you want to install"
        required: false
        default: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
runs:
    using: composite
    steps:
        - name: Setup cache environment
            id: extcache
            uses: shivammathur/cache-extensions@v1
            with:
                php-version: ${{ inputs.php-version }}
                extensions: ${{ inputs.php-extensions }}
                key: ${{ env.EXTENSIONS_CACHE_KEY }}

        - name: Cache extensions
            uses: actions/cache@v4
            with:
            path: ${{ steps.extcache.outputs.dir }}
            key: ${{ steps.extcache.outputs.key }}
            restore-keys: ${{ steps.extcache.outputs.key }}

        - name: Setup PHP and Composer
            uses: shivammathur/setup-php@v2
            with:
            php-version: ${{ inputs.php-version }}
            extensions: ${{ inputs.php-extensions }}
            tools: composer:v2

        - name: Get Composer cache directory
            id: composer-cache-dir
            run: echo dir=$(composer config cache-files-dir) >> $GITHUB_OUTPUT

        - name: Cache Composer dependencies
            uses: actions/cache@v4
            with:
            key: composer-cache-${{ hashFiles('**/composer.lock') }}
            path: ${{ steps.composer-cache-dir.outputs.dir }}
            # The restore-keys field provides a fallback mechanism to restore the cache if an exact match is not found. This can help speed up the build process even if the exact cache is not available.
            restore-keys: composer-cache-